@model TaskViewModel

@{
    ViewData["Title"] = "Delete task #" + Model.TaskId;
    var bottomButtons = new BottomButtonsViewModel()
    {
        Id = new IdWithName(Model.TaskId, "TaskId"),
        Controller = "tasks",
        BackAction = ViewBag.Route.BackAction,
        BackController = ViewBag.Route.BackController ?? "tasks"
    };
}

<h1>Delete task</h1>

<div class="details">
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayName("Id")</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.TaskId)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Name")</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Name)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Description")</dt>
        <dd class="col-sm-10">@Html.DisplayStringOrNull(Model.Description)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Start date")</dt>
        <dd class="col-sm-10">@Model.StartDate.ToString("dd.MM.yyyy")</dd>
        <dt class="col-sm-2">@Html.DisplayName("Deadline")</dt>
        <dd class="col-sm-10">@Model.DeadlineDate.ToString("dd.MM.yyyy")</dd>
        <dt class="col-sm-2">@Html.DisplayName("Members")</dt>
        <dd class="col-sm-10">@Html.CreateSimpleListMembers(Model.SelectedMembers, (List<MemberViewModel>)ViewBag.AllMembers)</dd>
    </dl>
</div>

<h3>Are you sure you want to delete this task?</h3>

@await Html.PartialAsync("_BottomDelete", bottomButtons)