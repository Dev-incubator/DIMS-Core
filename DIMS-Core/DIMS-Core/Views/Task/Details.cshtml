@model TaskViewModel

@{
    ViewData["Title"] = "Task details #" + Model.TaskId;
}

<h1>Task details</h1>

<div class="details">
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayName("Id")</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.TaskId)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Name")</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Name)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Description")</dt>
        <dd class="col-sm-10">@Html.DisplayStringOrNull(Model.Description)</dd>
        <dt class="col-sm-2">@Html.DisplayName("Start date")</dt>
        <dd class="col-sm-10">@Convert.ToDateTime(Model.StartDate).ToString("MM/dd/yyyy")</dd>
        <dt class="col-sm-2">@Html.DisplayName("Deadline")</dt>
        <dd class="col-sm-10">@Convert.ToDateTime(Model.DeadlineDate).ToString("MM/dd/yyyy")</dd>
        <dt class="col-sm-2">@Html.DisplayName("Members")</dt>
        <dd class="col-sm-10">@Html.CreateSimpleListMembers(Model.SelectedMembers, (List<MemberViewModel>)ViewBag.AllMembers)</dd>
    </dl>
</div>

<div class="details-controls">
    @Html.ActionLink("Edit", "Edit", new
    {
        id = Model.TaskId,
        back = ViewBag.BackController ?? "tasks"
    }, new { @class = "btn btn-warning" })

    @await Html.PartialAsync("_BackToList", new BackToListViewModel
    {
        Controller = ViewBag.BackController ?? "tasks",
        Action = ViewBag.BackAction
    })
</div>
