@model TaskViewModel

@{
    ViewData["Title"] = "Create task";
    var controller = "tasks";
}

<h1>Create new task</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="create" asp-controller="@controller" asp-antiforgery="true">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.DisplayName("Name")
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayName("Description")
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayName("Start date")
                <input asp-for="StartDate" type="date" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayName("Deadline")
                <input asp-for="DeadlineDate" type="date" class="form-control" />
                <span asp-validation-for="DeadlineDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.DisplayName("Members")
                @Html.CreateCheckListMembers(Model.SelectedMembers, (List<MemberViewModel>)ViewBag.AllMembers)
                <span asp-validation-for="SelectedMembers" class="text-danger"></span>
            </div>
            @await Html.PartialAsync("_BottomCreate", new BottomButtonsViewModel()
            {
                BackAction = ViewBag.BackAction,
                BackController = ViewBag.BackController ??= controller
            })
        </form>
    </div>
</div>