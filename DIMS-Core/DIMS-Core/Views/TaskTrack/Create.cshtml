@model TaskTrackViewModel

@{
    ViewData["Title"] = "Create task track";
    var bottomButtons = new BottomButtonsViewModel()
    {
        BackAction = ViewBag.Route.BackAction,
        BackController = ViewBag.Route.BackController ??= "task-tracks"
    };
    var backRouteData = new Dictionary<string, string>
    {
        { "BackAction", bottomButtons.BackAction },
        { "BackController", bottomButtons.BackController }
    };
}

<h1>Create task track</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="TaskTrack" asp-antiforgery="true" asp-all-route-data="@backRouteData">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Select task</label>
                <select asp-for="UserTaskId" asp-items="ViewBag.SelectListUserTasks" class="form-control" required>
                    @Model.UserTaskId != 0 ? Model.UserTaskId : null;
                </select>
                <span asp-validation-for="UserTaskId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TrackDate" class="control-label">Date</label>
                <input asp-for="TrackDate" type="date" class="form-control" />
                <span asp-validation-for="TrackDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TrackNote" class="control-label">Note</label>
                <input asp-for="TrackNote" class="form-control" />
                <span asp-validation-for="TrackNote" class="text-danger"></span>
            </div>
            @await Html.PartialAsync("_BottomCreate", bottomButtons)
        </form>
    </div>
</div>